-- Konfigurasi
print("Testis 6")

-- Konfigurasi
local petNameToUpgrade = "Nightguard Afton" -- Name of the pet/unit to be upgraded
local targetWavesForUpgrade = { "Wave 0/15", "Wave 1/15" } -- Waves where upgrades should start
local stopWave = "Wave 5/15" -- Wave to stop the upgrade loop
local checkInterval = 5 -- Time interval (in seconds) between each check
local PlacementMaxCap = 3 -- Maximum number of units that can be placed

-- Services and player references
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local PathWaveDetection = Player.PlayerGui.Top.Wave
local TowersFolder = workspace:WaitForChild("Towers")
local upgradeActive = false -- Status flag for the upgrade process

-- Function to check if the current wave is eligible for upgrades
local function isWaveEligibleForUpgrade(currentWaveText)
    return table.find(targetWavesForUpgrade, currentWaveText) ~= nil
end

-- Function to count the number of placed units with a specific name
local function countPlacedUnits(unitName)
    local count = 0
    for _, tower in pairs(TowersFolder:GetChildren()) do
        if tower.Name == unitName and tower:IsA("Model") then
            count = count + 1
        end
    end
    return count
end

-- Function to check if all folders within a unit have their "UpgradeStar" at Star3
local function allUnitsUpgradedToStar3(unit)
    for _, folder in ipairs(unit:GetChildren()) do
        if folder:IsA("Folder") and folder.Name == petNameToUpgrade then
            local upgradeStar = folder:FindFirstChild("UpgradeStar")
            if upgradeStar and upgradeStar.Value ~= "Star3" then
                return false
            end
        end
    end
    return true
end

-- Main loop for upgrading units
while true do
    local waveText = PathWaveDetection.Text

    -- Activate the upgrade process if the current wave is in the target list
    if isWaveEligibleForUpgrade(waveText) then
        upgradeActive = true
    end

    -- Stop the upgrade process if the stopWave is reached
    if waveText == stopWave then
        upgradeActive = false
    end

    -- If the upgrade process is active, execute the logic to find and upgrade units
    if upgradeActive then
        local allUpgradableUnits = {}
        for _, unit in pairs(TowersFolder:GetChildren()) do
            if unit.Name == petNameToUpgrade then
                table.insert(allUpgradableUnits, unit)
            end
        end

        -- Check if the number of placed units has reached the maximum capacity
        if #allUpgradableUnits >= PlacementMaxCap then
            print("Maximum placement capacity reached. Checking unit upgrades...")

            for _, unit in ipairs(allUpgradableUnits) do
                if allUnitsUpgradedToStar3(unit) then
                    print("All units are at Star3. Executing loadstring...")
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/LocasTheBoys/efenprojekmatiktuga/refs/heads/main/cocoktanemU64"))()
                    break
                else
                    print("Not all units are at Star3 yet.")
                end
            end
        end
    end

    wait(checkInterval) -- Delay between each loop iteration
end

